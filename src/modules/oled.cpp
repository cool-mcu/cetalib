/*
 * Copyright (C) 2025 dBm Signal Dynamics Inc.
 *
 * File:            oled.cpp
 * Project:         
 * Date:            Aug 18, 2025
 * Framework:       Arduino w. Arduino-Pico Core Pkge by Earl Philhower
 *                  (https://github.com/earlephilhower/arduino-pico)
 * 
 * cetalib "oled" text display driver interface functions
 *
 * Tested using Adafruit SSD1306-based 128x64 OLED display (#938)
 * 
 * Dependencies:
 * 
 * Adafruit_BusIO Library:   https://github.com/adafruit/Adafruit_BusIO 
 * Adafruit_SSD1306 Library: https://github.com/adafruit/Adafruit_SSD1306 
 * Adafruit-GFX Library:     https://github.com/adafruit/Adafruit-GFX-Library
 * SSD1306Ascii Library:     https://github.com/greiman/SSD1306Ascii
 * "Cool-MCU.com" Bitmap generated using this website: https://javl.github.io/image2cpp
 * 
 * OLED initialized with the following settings:
 *  - Configured for Adafruit 128x64 OLED (#938)
 *  - Default Font is used (5x7 pixel)
 *  - 7 row x 21 col (147 characters)
 *  - Auto-scrolling enabled
 * 
 * Hardware Configurations Supported:
 * 
 * CETA IoT Robot (Schematic #14-00069A/B), based on RPI-Pico-WH
 * (Select "Board = Raspberry Pi Pico W")
 * (Uses "Wire1" instance (I2C1 on pins SDA/GP18 & SCL/GP19))
 * 
 * Sparkfun XRP Robot Platform (#KIT-27644), based on the RPI RP2350B MCU
 * (Select "Board = SparkFun XRP Controller")
 * (Uses "Wire" instance (I2C0 on pins SDA/GP04 & SCL/GP05))
 *
 * Sparkfun XRP (Beta) Robot Platform (#KIT-22230), based on the RPI Pico W
 * (Select "Board = SparkFun XRP Controller (Beta)")
 * (Uses "Wire1" instance (I2C1 on pins SDA/GP18 & SCL/GP19))
 *
 */

/** Include Files *************************************************************/
#include <Arduino.h>                // Required for Arduino functions
#include <Adafruit_GFX.h>           // Required to display splash screen logo
#include <Adafruit_SSD1306.h>       // Required to display splash screen logo
#include "SSD1306Ascii.h"           // Text display driver
#include "SSD1306AsciiWire.h"       // Text display driver classes using I2C  
#include "oled.h"                   // "oled" API declarations

/*** Symbolic Constants used in this module ***********************************/

/*** Global Variable Declarations *********************************************/

#if defined(ARDUINO_RASPBERRY_PI_PICO_W) || defined(ARDUINO_SPARKFUN_XRP_CONTROLLER_BETA)
// Declare an Adafruit SSD1306 object
Adafruit_SSD1306 ADA_OLED(OLED_SCREEN_WIDTH, OLED_SCREEN_HEIGHT, &Wire1, -1);
// Declare an SSD1306Ascii object
SSD1306AsciiWire SSD1306_OLED(Wire1);
#elif defined(ARDUINO_SPARKFUN_XRP_CONTROLLER)
// Declare an Adafruit SSD1306 object
Adafruit_SSD1306 ADA_OLED(OLED_SCREEN_WIDTH, OLED_SCREEN_HEIGHT, &Wire, -1);
// Declare an SSD1306Ascii object
SSD1306AsciiWire SSD1306_OLED(Wire);
#else
  #error Unsupported board selection
#endif

// Cool-MCU.com logo, 128x64
static const unsigned char epd_bitmap_logo_White [] PROGMEM = {
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1e, 0x6c, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x0c, 0x38, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0x30, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xc0, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xbe, 0x80, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xc3, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xc0, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x18, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x18, 0x00, 0x01, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0e, 0x30, 0x00, 0x02, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0c, 0x20, 0x00, 0x02, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xc0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xc0, 0x00, 0x01, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf3, 0x80, 0x00, 0x03, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x63, 0x00, 0x00, 0x04, 0xc6, 0x0f, 0x00, 0x00, 0x00, 0x40, 0x3e, 0x22, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0x00, 0x00, 0x04, 0x06, 0x1f, 0x80, 0x00, 0xc0, 0xc3, 0x3f, 0x63, 0x00, 0x00, 0x00, 0x00, 
	0x0e, 0x00, 0x00, 0x07, 0x03, 0x19, 0x80, 0x00, 0xc0, 0xe3, 0x73, 0x63, 0x00, 0x00, 0x00, 0x00, 
	0x06, 0x00, 0x00, 0x98, 0x80, 0x19, 0x80, 0x00, 0xc0, 0xe7, 0x63, 0x63, 0x00, 0x00, 0x00, 0x00, 
	0x0e, 0x30, 0x03, 0x1c, 0x20, 0x18, 0x00, 0x00, 0xc0, 0xe7, 0x60, 0x63, 0x00, 0x00, 0x00, 0x00, 
	0x0d, 0xe8, 0x06, 0x04, 0x70, 0x18, 0x1f, 0x7e, 0xc0, 0xf7, 0x60, 0x63, 0x0f, 0x9f, 0x7f, 0xc0, 
	0x0c, 0xcc, 0x0c, 0x60, 0x38, 0x18, 0x3b, 0x66, 0xc0, 0xff, 0x60, 0x63, 0x0d, 0x9b, 0x7f, 0xe0, 
	0x08, 0x0c, 0x18, 0x32, 0x10, 0x18, 0x33, 0x66, 0xde, 0xff, 0x60, 0x63, 0x0c, 0x9b, 0x66, 0x60, 
	0x08, 0x00, 0x71, 0x83, 0x00, 0x18, 0x33, 0x66, 0xde, 0xdf, 0x60, 0x63, 0x0c, 0x1b, 0x66, 0x60, 
	0x00, 0x00, 0x60, 0x43, 0x00, 0x19, 0xb3, 0x66, 0xc0, 0xdb, 0x63, 0x63, 0x0c, 0x1b, 0x66, 0x60, 
	0x00, 0x20, 0x66, 0x03, 0x80, 0x19, 0xb3, 0x66, 0xc0, 0xdb, 0x63, 0x63, 0x0c, 0x9b, 0x66, 0x60, 
	0x00, 0x70, 0x07, 0x01, 0x80, 0x1f, 0xbf, 0x7e, 0xc0, 0xcb, 0x3f, 0x7f, 0x6f, 0x9f, 0x66, 0x60, 
	0x00, 0x10, 0x06, 0x80, 0x00, 0x1f, 0x9f, 0x7c, 0xc0, 0xc3, 0x3e, 0x7e, 0x6f, 0x9f, 0x66, 0x40, 
	0x00, 0x04, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x06, 0x20, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x70, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// initiallize function pointers
extern const struct OLED_INTERFACE OLED = {
    .initialize             = &oled_init,
    .print                  = &oled_print,
    .println                = &oled_println,
    .clear                  = &oled_clear,
    .home                   = &oled_home
};

/*** Private Function Prototypes **********************************************/

/*** Public Function Definitions **********************************************/

bool oled_init(void)
{
	#if defined(ARDUINO_RASPBERRY_PI_PICO_W) || defined(ARDUINO_SPARKFUN_XRP_CONTROLLER_BETA)
	// Setup Wire1 as interface (I2C1) 
  Wire1.setSDA(OLED_SDA_PIN);
  Wire1.setSCL(OLED_SCL_PIN);
  Wire1.setClock(OLED_I2C_BAUD);
  Wire1.begin();
	#elif defined(ARDUINO_SPARKFUN_XRP_CONTROLLER)
	// Setup Wire as interface (I2C0) 
  Wire.setSDA(OLED_SDA_PIN);
  Wire.setSCL(OLED_SCL_PIN);
  Wire.setClock(OLED_I2C_BAUD);
  Wire.begin();
	#else
  #error Unsupported board selection
	#endif

  // Display the Cool-MCU.com logo bitmap
  if (!ADA_OLED.begin(SSD1306_SWITCHCAPVCC, OLED_I2C_ADDRESS))
  {
    return false;
  }
  ADA_OLED.clearDisplay(); // Make sure the display is cleared
  ADA_OLED.drawBitmap(0, 16, epd_bitmap_logo_White, 128, 64, WHITE);
  ADA_OLED.display();
  delay(5000);
  ADA_OLED.clearDisplay();
  ADA_OLED.display();

  // Enable line-mode output from now on
  SSD1306_OLED.begin(&Adafruit128x64, OLED_I2C_ADDRESS);
  SSD1306_OLED.setFont(System5x7);
  SSD1306_OLED.setScrollMode(SCROLL_MODE_AUTO);
  SSD1306_OLED.clear();
  SSD1306_OLED.home();
  return true;
}

void oled_print(char *s)
{
  SSD1306_OLED.print(s);
}

void oled_println(char *s)
{
  SSD1306_OLED.println(s);
}

void oled_clear(void)
{
  SSD1306_OLED.clear();
}

void oled_home(void)
{
  SSD1306_OLED.home();
}